class SummaryAgent:
    def __init__(self, llm):
        self.llm = llm

    def summarize(self, state):
      content_str=f"""Voc√™ est√° atuando como um especialista que recebeu tr√™s pareceres t√©cnicos distintos sobre uma mesma les√£o cut√¢nea, baseados nos seguintes algoritmos:
      1Ô∏è‚É£ ABCD ‚Äì {state.diagnosis_abcd}
      2Ô∏è‚É£ Menzies ‚Äì {state.diagnosis_menzies}
      3Ô∏è‚É£ SPCL (Seven Point Checklist) ‚Äì {state.diagnosis_spcl}

      Sua fun√ß√£o √© integrar os tr√™s pareceres fornecidos, comparando seus resultados e justificativas, para construir um **diagn√≥stico consolidado e fundamentado**.

      Considere:
      - O grau de concord√¢ncia ou conflito entre os algoritmos;
      - A presen√ßa de padr√µes de alto risco recorrentes nos pareceres;
      - A confiabilidade dos crit√©rios observados (por exemplo, m√∫ltiplas cores, bordas irregulares e estruturas at√≠picas);
      - A gravidade potencial com base em crit√©rios combinados.

      üß† Ao final, forne√ßa um parecer cl√≠nico estruturado em formato JSON:

      ```json
      {{
        "Diagn√≥stico Final": "Suspeita de Melanoma / Les√£o Benigna / Les√£o Indeterminada",
        "Justificativa": "Integra√ß√£o das evid√™ncias dos algoritmos ABCD, Menzies e SPCL, destacando os principais achados.",
        "Recomenda√ß√µes": "Sugest√µes cl√≠nicas como bi√≥psia, acompanhamento, ou nenhuma a√ß√£o imediata."
      }}
      """
      content = [
          # {'type': 'text', 'text': "Aqui est√° a imagem original da les√£o:"},
          # {'type': 'image_url', 'image_url': f'data:image/jpeg;base64,{state.image_data}'},
          # {'type': 'text', 'text': "Aqui est√° a vers√£o segmentada da les√£o:Aqui est√° a vers√£o segmentada da les√£o:"},
          # {'type': 'image_url', 'image_url': f'data:image/jpeg;base64,{state.seg_image_data}'},
          {'type': 'text', 'text': content_str}
      ]
      msg = [HumanMessage(content=content)]
      return {"validation": llm.invoke(msg).content}